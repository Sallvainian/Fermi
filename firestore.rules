rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Classes - authenticated users can read, only creator can write
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null 
        && resource.data.teacherId == request.auth.uid;
      
      // Nested collections in classes
      match /{document=**} {
        allow read: if request.auth != null;
        allow write: if request.auth != null 
          && get(/databases/$(database)/documents/classes/$(classId)).data.teacherId == request.auth.uid;
      }
    }
    
    // Messages and conversations
    match /conversations/{conversationId} {
      allow read: if request.auth != null 
        && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null 
        && request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null 
        && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read: if request.auth != null 
          && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        allow create: if request.auth != null 
          && request.auth.uid == request.resource.data.senderId;
      }
    }
    
    // Announcements - any authenticated user can read, only creator can write
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null 
        && resource.data.authorId == request.auth.uid;
    }
    
    // Games - any authenticated user can read, only creator can write
    match /games/{gameId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null 
        && resource.data.creatorId == request.auth.uid;
      
      // Scores - users can only create/update their own scores
      match /scores/{scoreId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null 
          && request.auth.uid == request.resource.data.studentId;
        allow update: if request.auth != null 
          && request.auth.uid == resource.data.studentId;
      }
    }
  }
}