name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

env:
  FLUTTER_VERSION: '3.32.8'

jobs:
  # Code quality checks
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Analyze code
        run: flutter analyze --no-fatal-infos
        
      - name: Check formatting
        run: dart format --set-exit-if-changed .

  # Run tests with coverage
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Run tests with coverage
        run: flutter test --coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/lcov.info
          fail_ci_if_error: false

  # Build for Web
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [analyze, test]
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build web
        run: flutter build web --release --web-renderer html
        
      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 7

  # Build for Android
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [analyze, test]
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release --split-per-abi
        
      - name: Build App Bundle
        run: flutter build appbundle --release
        
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: 7
          
      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 7

  # Build for iOS (only on macOS runners)
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: [analyze, test]
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          architecture: x64
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..
          
      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign
        
      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 7

  # Summary job for branch protection
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [analyze, test, build-web, build-android, build-ios]
    if: always()
    steps:
      - name: Check job statuses
        run: |
          if [[ "${{ needs.analyze.result }}" != "success" ]] || \
             [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "Required checks failed"
            exit 1
          fi
          echo "All required checks passed!"