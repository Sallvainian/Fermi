name: Mobile Builds
on:
  push:
    tags:
      - 'android-v*'
      - 'ios-v*'
  workflow_dispatch:
    inputs:
      platform:
        description: Platform to build
        type: choice
        required: true
        default: both
        options: [android, ios, both]
concurrency:
  group: mobile-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  android:
    name: Android APK
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/android-v')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both'))
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Write google-services.json
        shell: bash
        run: |
          # Check if file already exists (committed to repo)
          if [ -f "android/app/google-services.json" ] && [ -s "android/app/google-services.json" ]; then
            echo "✓ google-services.json already exists in repository"
          elif [ -n "${{ secrets.GOOGLE_SERVICES_JSON_B64 }}" ]; then
            echo "Writing google-services.json from secret..."
            echo "${{ secrets.GOOGLE_SERVICES_JSON_B64 }}" | base64 -d > android/app/google-services.json
          fi
          test -s android/app/google-services.json || (echo "ERROR: google-services.json missing/empty" && exit 1)

      - name: Build Android APK
        shell: bash
        run: |
          set -euo pipefail
          flutter build apk --release \
            --dart-define=FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} \
            --dart-define=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --dart-define=FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
            --dart-define=FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} \
            --dart-define=FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
            --dart-define=FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }} \
            --dart-define=FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }} \
            --dart-define=FIREBASE_VAPID_KEY=${{ secrets.FIREBASE_VAPID_KEY }}
      
      - uses: actions/upload-artifact@v4
        with:
          name: android-artifact
          path: build/app/outputs/flutter-apk/app-release.apk

  ios:
    name: iOS IPA
    runs-on: macos-latest
    if: >
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/ios-v')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both'))
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Write GoogleService-Info.plist
        shell: bash
        run: |
          # Check if file already exists (committed to repo)
          if [ -f "ios/Runner/GoogleService-Info.plist" ] && [ -s "ios/Runner/GoogleService-Info.plist" ]; then
            echo "✓ GoogleService-Info.plist already exists in repository"
          elif [ -n "${{ secrets.GOOGLESERVICE_INFO_PLIST_B64 }}" ]; then
            echo "Writing GoogleService-Info.plist from secret..."
            echo "${{ secrets.GOOGLESERVICE_INFO_PLIST_B64 }}" | base64 -d > ios/Runner/GoogleService-Info.plist
          fi
          test -s ios/Runner/GoogleService-Info.plist || (echo "ERROR: GoogleService-Info.plist missing/empty" && exit 1)
          echo "GoogleService-Info.plist ready ($(wc -c < ios/Runner/GoogleService-Info.plist) bytes)"

      - name: CocoaPods setup
        run: |
          cd ios
          pod repo update
          pod install
          cd ..

      - name: Build iOS IPA (no codesign)
        shell: bash
        run: |
          set -euo pipefail
          flutter build ipa --release --no-codesign \
            --dart-define=FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} \
            --dart-define=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --dart-define=FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
            --dart-define=FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} \
            --dart-define=FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
            --dart-define=FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }} \
            --dart-define=FIREBASE_APP_ID_IOS=${{ secrets.FIREBASE_APP_ID_IOS }} \
            --dart-define=FIREBASE_VAPID_KEY=${{ secrets.FIREBASE_VAPID_KEY }}

      - uses: actions/upload-artifact@v4
        with:
          name: ios-artifact
          path: build/ios/ipa/*.ipa