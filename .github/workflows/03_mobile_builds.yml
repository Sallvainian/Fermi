name: Mobile Builds
on:
  push:
    tags:
      - 'android-v*'
      - 'ios-v*'
  workflow_dispatch:
    inputs:
      platform:
        description: Platform to build
        type: choice
        required: true
        default: both
        options: [android, ios, both]
concurrency:
  group: mobile-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
jobs:
  build:
    strategy:
      matrix:
        platform: [android, ios]
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    if: >
      github.event_name == 'push' ||
      github.event.inputs.platform == 'both' ||
      github.event.inputs.platform == matrix.platform
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          distribution: temurin
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      # Create Firebase config files for mobile (dart-defines are NOT enough)
      - name: Write google-services.json (Android)
        if: matrix.platform == 'android'
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_B64 }}" | base64 -d > android/app/google-services.json

      - name: Write GoogleService-Info.plist (iOS)
        if: matrix.platform == 'ios'
        run: |
          echo "${{ secrets.GOOGLESERVICE_INFO_PLIST_B64 }}" | base64 -d > ios/Runner/GoogleService-Info.plist

      - name: CocoaPods setup (iOS)
        if: matrix.platform == 'ios'
        run: |
          cd ios
          pod repo update
          pod install
          cd ..

      - name: Build
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            flutter build apk --release               --dart-define=FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}               --dart-define=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}               --dart-define=FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}               --dart-define=FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}               --dart-define=FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}               --dart-define=FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}               --dart-define=FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}               --dart-define=FIREBASE_VAPID_KEY=${{ secrets.FIREBASE_VAPID_KEY }};
          else
            flutter build ipa --release --no-codesign               --dart-define=FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}               --dart-define=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}               --dart-define=FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}               --dart-define=FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}               --dart-define=FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}               --dart-define=FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}               --dart-define=FIREBASE_APP_ID_IOS=${{ secrets.FIREBASE_APP_ID_IOS }}               --dart-define=FIREBASE_VAPID_KEY=${{ secrets.FIREBASE_VAPID_KEY }};
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifact
          path: ${{ matrix.platform == 'android' && 'build/app/outputs/flutter-apk/app-release.apk' || 'build/ios/ipa/*.ipa' }}
