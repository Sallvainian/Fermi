name: macOS Release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

env:
  FLUTTER_VERSION: '3.32.0'
  XCODE_VERSION: '15.4'
  MACOS_APP_NAME: 'Fermi'
  BUNDLE_ID: 'com.academic-tools.fermi'

jobs:
  build:
    name: Build macOS App
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Clean Flutter build
        run: flutter clean

      - name: Enable macOS build
        run: flutter config --enable-macos-desktop

      - name: Build macOS app
        run: flutter build macos --release

      - name: Create DMG
        run: |
          # Create a directory for DMG contents
          mkdir -p dmg_contents
          
          # Copy the app bundle to DMG contents
          cp -R build/macos/Build/Products/Release/${{ env.MACOS_APP_NAME }}.app dmg_contents/
          
          # Create Applications symlink
          ln -s /Applications dmg_contents/Applications
          
          # Create DMG
          hdiutil create -volname "${{ env.MACOS_APP_NAME }}" \
            -srcfolder dmg_contents \
            -ov -format UDZO \
            "${{ env.MACOS_APP_NAME }}-${{ github.event.inputs.version || github.ref_name }}.dmg"

      - name: Upload DMG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: "*.dmg"

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: "*.dmg"
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}