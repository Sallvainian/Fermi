name: macOS Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

env:
  FLUTTER_VERSION: '3.32.0'
  XCODE_VERSION: '15.4'
  MACOS_APP_NAME: 'Fermi'
  BUNDLE_ID: 'com.academic-tools.fermi'

jobs:
  build:
    name: Build macOS App
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install Ruby dependencies
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'

      - name: Create Gemfile for Fastlane
        run: |
          cat > Gemfile << 'EOF'
          source "https://rubygems.org"
          
          gem "fastlane"
          gem "cocoapods"
          EOF
          
          bundle install

      - name: Install create-dmg
        run: |
          brew install create-dmg

      - name: Set version number
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          # Update version in pubspec.yaml
          sed -i '' "s/^version: .*/version: $VERSION/" pubspec.yaml

      - name: Run Fastlane CI Release
        env:
          MACOS_CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
          MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
          MACOS_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_PROVISION_PROFILE_BASE64 }}
          MACOS_IDENTITY: ${{ secrets.MACOS_IDENTITY }}
          DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM_MAC }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_FUNCTIONS_REGION: ${{ secrets.FIREBASE_FUNCTIONS_REGION }}
          APP_VERSION: ${{ env.APP_VERSION }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          bundle exec fastlane mac ci_release \
            version:${{ env.APP_VERSION }} \
            build_number:${{ github.run_number }}

      - name: Generate checksums
        run: |
          shasum -a 256 "Fermi-${{ env.APP_VERSION }}.dmg" > checksums.txt

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: |
            Fermi-${{ env.APP_VERSION }}.dmg
            checksums.txt

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-dmg

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            TAG="${{ github.ref_name }}"
            VERSION=${TAG#v}
            VERSION=${VERSION#macos-v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('macos-v{0}', steps.get_version.outputs.version) || github.ref_name }}
          name: Fermi macOS v${{ steps.get_version.outputs.version }}
          files: |
            Fermi-${{ steps.get_version.outputs.version }}.dmg
            checksums.txt
          body: |
            ## Fermi Education Platform - macOS Release v${{ steps.get_version.outputs.version }}

            ### ðŸ“¦ Installation
            1. Download the DMG file
            2. Open the DMG
            3. Drag Fermi to your Applications folder

            ### System Requirements
            - macOS 11.0 Big Sur or later