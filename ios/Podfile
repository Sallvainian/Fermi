# Uncomment this line to define a global platform for your project
platform :ios, '16.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Firebase will be automatically included by Flutter plugins
  # No need to specify versions here
  
  # Force compatible versions for Xcode 13.2.1
  pod 'SDWebImage', '5.18.0'
end

# Force dependency resolution to use compatible versions
$force_GoogleSignIn_version = true

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Ensure all pods target iOS 16.0 or higher
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      
      # Enable module stability for better compatibility
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # Disable bitcode for compatibility
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Fix SDWebImage compatibility issue
      if target.name == 'SDWebImage'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'SD_CHECK_CGIMAGE_RETAIN_SOURCE=1'
      end
      
      # Fix GoogleUtilities TARGET_OS_VISION issue for older Xcode
      if target.name == 'GoogleUtilities'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'TARGET_OS_VISION=0'
      end
      
      # Fix Firebase Swift compatibility
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Define missing constants for older Xcode
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'TARGET_OS_VISION=0'
      
      # Disable newer Swift features
      config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
      config.build_settings['SWIFT_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
      
      # Handle pods with newer Swift syntax
      if ['FirebaseSharedSwift', 'FirebaseCoreInternal', 'FirebaseCore', 'FirebaseAuth', 'GoogleUtilities'].include?(target.name)
        # Define Swift compatibility flags
        config.build_settings['OTHER_SWIFT_FLAGS'] = '$(inherited) -D SWIFT_PACKAGE -Xcc -Wno-error=non-modular-include-in-framework-module'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
      
      # Silence all warnings for pod targets
      config.build_settings['WARNING_CFLAGS'] = '-w'
      config.build_settings['INHIBIT_ALL_WARNINGS'] = 'YES'
    end
  end
  
  # Apply flutter_webrtc patch for Xcode 13.2.1 compatibility
  patch_script = "#{File.dirname(__FILE__)}/../scripts/patch_flutter_webrtc.sh"
  if File.exist?(patch_script)
    puts "Applying flutter_webrtc compatibility patch..."
    system("sh #{patch_script}")
  end
end