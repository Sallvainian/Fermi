platform :osx, '10.15'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)
    
    # Fix deployment target warnings
    target.build_configurations.each do |config|
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
      
      # Suppress specific warnings for Firebase plugins
      if target.name.include?('firebase_auth') || target.name.include?('cloud_functions')
        # Suppress deprecated API warnings for Firebase Auth
        config.build_settings['GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS'] = 'NO'
        config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
        
        # Suppress unused variable warnings
        config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
        config.build_settings['GCC_WARN_UNUSED_FUNCTION'] = 'NO'
        
        # Suppress Swift compatibility warnings
        config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
        
        # Add retroactive conformance flag for Swift 6
        if config.build_settings['SWIFT_VERSION']
          swift_version = config.build_settings['SWIFT_VERSION'].to_f
          if swift_version >= 6.0
            config.build_settings['OTHER_SWIFT_FLAGS'] ||= ''
            config.build_settings['OTHER_SWIFT_FLAGS'] += ' -Xfrontend -enable-upcoming-feature -Xfrontend RetroactiveAttribute'
          end
        end
      end
      
      # Suppress gRPC-Core zlib warnings
      if target.name == 'gRPC-Core'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'OS_CODE=10'
        config.build_settings['GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS'] = 'NO'
      end
      
      # Suppress Firebase SDK warnings
      if target.name.include?('Firebase')
        config.build_settings['GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS'] = 'NO'
        config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
        config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
        config.build_settings['GCC_WARN_UNUSED_FUNCTION'] = 'NO'
      end
      
      # Suppress warnings for all Pods in release mode
      if config.name == 'Release'
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
      end
    end
  end
  
  # Fix deployment targets in all pod projects
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
  end
  
  # Fix build phase warnings
  installer.pods_project.targets.each do |target|
    target.build_phases.each do |phase|
      if phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
        phase.always_out_of_date = '1' if phase.respond_to?(:always_out_of_date=)
      end
    end
  end
end
